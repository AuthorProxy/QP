<#@ template language="C#" debug="false" #>

<#@ import namespace="Quantumart.QP8.Logging.Transformers" #>
<#@ import namespace="Quantumart.QP8.Logging.Templates.Default" #>
<#@ import namespace="Quantumart.QP8.Resources" #>
<#@ import namespace="Quantumart.QP8.BLL.Services.MultistepActions.Import" #>
<#@ import namespace="Quantumart.QP8.BLL.Enums.Csv" #>

<#@ parameter name="Model" type="Quantumart.QP8.Logging.Loggers.ImportStepSettings" #>
<#@ parameter name="Context" type="Quantumart.QP8.Logging.Loggers.LoggerContext" #>
<#@ parameter name="LogEntry" type="Microsoft.Practices.EnterpriseLibrary.Logging.LogEntry" #>
<#@ parameter name="TraceOptions" type="System.Diagnostics.TraceOptions" #>

<#
var settings = Model.Settings;
if (settings.ImportAction == (int)CsvImportMode.InsertAll || settings.ImportAction == (int)CsvImportMode.InsertAndUpdate || settings.ImportAction == (int)CsvImportMode.InsertNew || settings.ImportAction == (int)CsvImportMode.UpdateIfChanged || settings.ImportAction == (int)CsvImportMode.Update )
    {
        string inserted = String.Format(MultistepActionStrings.InsertedArticlesCount, settings.InsertedArticleIds.Count);
        string updated = String.Format(MultistepActionStrings.UpdatedArticlesCount, settings.UpdatedArticleIds.Count);
        Write("{0}; {1}.", inserted, updated);
    }
#>
