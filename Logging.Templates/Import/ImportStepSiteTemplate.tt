<#@ template language="C#" #>
<#@ import namespace="Quantumart.QP8.Logging.Transformers" #>
<#@ import namespace="Quantumart.QP8.Logging.Templates.Default" #>
<#@ import namespace="Quantumart.QP8.Resources" #>
<#@ import namespace="Quantumart.QP8.BLL.Services.MultistepActions.Import" #>
<#@ import namespace="Quantumart.QP8.BLL.Enums" #>

<#@ parameter name="Model" type="Quantumart.QP8.Logging.Loggers.ImportStepSettings" #>
<#@ parameter name="Context" type="Quantumart.QP8.Logging.Loggers.LoggerContext" #>
<#@ parameter name="LogEntry" type="Microsoft.Practices.EnterpriseLibrary.Logging.LogEntry" #>
<#@ parameter name="TraceOptions" type="System.Diagnostics.TraceOptions" #>

<#
var setts = Model.Settings;
if (setts.ImportAction == (int)ImportActions.InsertAndUpdate || setts.ImportAction == (int)ImportActions.InsertNew || setts.ImportAction == (int)ImportActions.UpdateIfChanged)
    {
        string inserted = String.Format(MultistepActionStrings.InsertedArticlesCount, setts.InsertedArticleIds.Count);
        string updated = String.Format(MultistepActionStrings.UpdatedArticlesCount, setts.UpdatedArticleIds.Count);
        Write("{0}; {1}.", inserted, updated);
    }
#>
