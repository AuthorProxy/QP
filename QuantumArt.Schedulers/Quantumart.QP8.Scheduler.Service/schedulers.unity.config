<unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
  <alias alias="perTask" type="Microsoft.Practices.Unity.TransientLifetimeManager, Microsoft.Practices.Unity" />
  <alias alias="perRunningService" type="Microsoft.Practices.Unity.HierarchicalLifetimeManager, Microsoft.Practices.Unity" />
  <alias alias="ISchedule" type="Quantumart.QP8.Scheduler.API.ISchedule, Quantumart.QP8.Scheduler.API" />
  <alias alias="IntervalSchedule" type="Quantumart.QP8.Scheduler.API.IntervalSchedule, Quantumart.QP8.Scheduler.API" />
  <container>
    <register type="ISchedule" mapTo="IntervalSchedule" name="UserSynchronizationSchedule">
      <lifetime type="perRunningService" />
      <constructor>
        <param name="interval" value="00:00:20" />
      </constructor>
    </register>
    <register type="ISchedule" mapTo="IntervalSchedule" name="System.Notifications">
      <lifetime type="perRunningService" />
      <constructor>
        <param name="interval" value="00:00:30" />
      </constructor>
    </register>
    <register type="ISchedule" mapTo="IntervalSchedule" name="Interface.Notifications">
      <lifetime type="perRunningService" />
      <constructor>
        <param name="interval" value="00:00:30" />
      </constructor>
    </register>
    <register type="ISchedule" mapTo="IntervalSchedule" name="System.Notifications.Cleanup">
      <lifetime type="perRunningService" />
      <constructor>
        <param name="interval" value="01:00:40" />
      </constructor>
    </register>
    <register type="ISchedule" mapTo="IntervalSchedule" name="Interface.Notifications.Cleanup">
      <lifetime type="perRunningService" />
      <constructor>
        <param name="interval" value="00:00:40" />
      </constructor>
    </register>
  </container>
</unity>
