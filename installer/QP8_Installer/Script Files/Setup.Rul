//===========================================================================
//
//  File Name:    Setup.rul
//
//  Description:  Blank setup main script file
//
//  Comments:     Blank setup is an empty setup project. If you want to
//				  create a new project via. step-by step instructions use the
//				  Project Assistant.
//
//===========================================================================

// Included header files ----------------------------------------------------
#include "ifx.h"
#include "Utils.rul"
#include "WebsiteParamsDialog.rul"
#include "RequirementsDialog.rul"

prototype CreateWebsites();
prototype CheckOS();
prototype CheckReq(BYREF LIST);

function CreateWebsites()
	STRING szAppPoolName, szWebsiteName, szWebsitePort, szBindingName, szBindingPort;
    STRING szMsg, szFolder, szItem;
    LIST lstBindings;
    INT i;
begin
	LoadStringFromStringTable("IDS_CREATING_WEBSITES", szMsg);
	SdShowMsg(szMsg, TRUE);
	if (FeatureIsItemSelected(MEDIA, "WebApp\\Backend"))
	then
		TextSubGetValue("<QP8_APPPOOL_NAME>", szAppPoolName, TRUE, FALSE);
		TextSubGetValue("<QP8_WEBSITE_NAME>", szWebsiteName, TRUE, FALSE);
		TextSubGetValue("<QP8_WEBSITE_PORT>", szWebsitePort, TRUE, FALSE);
		TextSubGetValue("<BACKENDFOLDER>", szFolder, TRUE, FALSE);
		TextSubGetValue("<QP8_BINDING_NAME>", szBindingName, TRUE, FALSE);
		TextSubGetValue("<QP8_BINDING_PORT>", szBindingPort, TRUE, FALSE);
		CreateAppPool(szAppPoolName);
		CreateWebsite(szAppPoolName, szWebsiteName, szWebsitePort, szFolder);
		AddBinding(szWebsiteName, szBindingName, szBindingPort, "*");
	endif;
end;

function CheckOS()
	STRING szMsg;
begin
	// на ОС с версией меньше чем у Vista/Server 2008 инсталлятор не ставится
	if (SYSINFO.nOSMajor < 6) then
		LoadStringFromStringTable("IDS_OS_NOT_SUPPORTED", szMsg);
		MessageBox(szMsg, SEVERE);
		abort;
	endif;
	
	//проверяем сервис-пак для Server 2008
	if (SYSINFO.nISOSL == ISOSL_WINVISTA_SERVER2008 && SYSINFO.nOSProductType != VER_NT_WORKSTATION) then
		if (SYSINFO.WINNT.nServicePack < 2) then
			LoadStringFromStringTable("IDS_SERVICEPACK_RECOMMENDED", szMsg);
			Sprintf(szMsg, szMsg, "2");
			MessageBox(szMsg, WARNING);
		endif;
	endif;

	//проверяем сервис-пак для Server 2008 R2
	if (SYSINFO.nISOSL == ISOSL_WIN7_SERVER2008R2 && SYSINFO.nOSProductType != VER_NT_WORKSTATION) then
		if (SYSINFO.WINNT.nServicePack < 2) then
			LoadStringFromStringTable("IDS_SERVICEPACK_RECOMMENDED", szMsg);
			Sprintf(szMsg, szMsg, "2");
			MessageBox(szMsg, WARNING);
		endif;
	endif;

	//делаем проверку на клиентскую ОС Windows Vista
	if (SYSINFO.nISOSL == ISOSL_WINVISTA_SERVER2008 && SYSINFO.nOSProductType == VER_NT_WORKSTATION) then
		LoadStringFromStringTable("IDS_CLIENT_OS_WARNING", szMsg);
		MessageBox(szMsg, WARNING);
	endif;

	//делаем проверку на клиентскую ОС Windows 7
	if (SYSINFO.nISOSL == ISOSL_WIN7_SERVER2008R2 && SYSINFO.nOSProductType == VER_NT_WORKSTATION) then
		LoadStringFromStringTable("IDS_CLIENT_OS_WARNING", szMsg);
		MessageBox(szMsg, WARNING);
	endif;

end;

function CheckReq(listReq)
	STRING szMsg;
begin
	// очищаем список требований
	ListDeleteAll(listReq);

	//LoadStringFromStringTable("IDS_REQUIRED_NETFX4", szMsg);
	//if (!IsNetfx45Installed()) then ListAddString(listReq,  szMsg, AFTER); endif;

	LoadStringFromStringTable("IDS_REQUIRED_IIS", szMsg);
	if (IsIIS7() || IsIIS75() || IsIIS8()) then ListAddString(listReq,  szMsg, AFTER); endif;
	//LoadStringFromStringTable("IDS_REQUIRED_APPFABRIC", szMsg);
	//if (!IsAppFabricInstalled()) then ListAddString(listReq,  szMsg, AFTER); endif;
end;

//---------------------------------------------------------------------------                                                                        
// OnFirstUIBefore
//
// First Install UI Sequence - Before Move Data
//
// The OnFirstUIBefore event is called by OnShowUI when the setup is
// running in first install mode. By default this event displays UI allowing
// the end user to specify installation parameters.
//
// Note: This event will not be called automatically in a
// program...endprogram style setup.
//---------------------------------------------------------------------------
function OnFirstUIBefore()
    number  nResult, nLevel, nSize, nSetupType;
    string  szTitle, szMsg, szOpt1, szOpt2, szLicenseFile;
    string  szName, szCompany, szTargetPath, szDir, szFeatures;
    STRING  szBindingName, szBindingPort;
    BOOL    bLicenseAccepted;
    LIST    listReq;
begin	

    // Added in InstallShield 15 - Show an appropriate error message if
    // -removeonly is specified and the product is not installed.
    if( REMOVEONLY ) then
        Disable( DIALOGCACHE );
		szMsg = SdLoadString( IDS_IFX_ERROR_PRODUCT_NOT_INSTALLED_UNINST );
   		SdSubstituteProductInfo( szMsg );
		MessageBox( szMsg, SEVERE );
		abort;
    endif;
    
    nSetupType = COMPLETE;	
    szDir = TARGETDIR;
    szName = "";
    szCompany = "";
    bLicenseAccepted = FALSE;
	listReq = ListCreate(STRINGLIST);

	TextSubSetValue("<QP8_APPPOOL_NAME>", "QP8", TRUE);
	TextSubSetValue("<QP8_WEBSITE_NAME>", "QP8", TRUE);
	TextSubSetValue("<QP8_WEBSITE_PORT>", "89", TRUE);
	TextSubSetValue("<QP8_BINDING_NAME>", "localhost", TRUE);
	TextSubSetValue("<QP8_BINDING_PORT>", "89", TRUE);
	TextSubSetValue("<BACKENDFOLDER>", IISROOTFOLDER ^ "QP8" ^ "Backend", TRUE);
	TextSubSetValue("<WINLOGONFOLDER>", IISROOTFOLDER ^ "QP8" ^ "Winlogon", TRUE);
	TextSubSetValue("<ARTICLESCHEDULERFOLDER>", IISROOTFOLDER ^ "QP8" ^ "ArticleScheduler", TRUE);

	// check OS
	CheckOS();
	
// Beginning of UI Sequence
Dlg_Start:
    nResult = 0;

Dlg_SdWelcome:
    szTitle = "";
    szMsg = "";
    //{{IS_SCRIPT_TAG(Dlg_SdWelcome)
    nResult = SdWelcome( szTitle, szMsg );
    //}}IS_SCRIPT_TAG(Dlg_SdWelcome)
    if (nResult = BACK) goto Dlg_Start;

Dlg_RequirementsDialog:
	
	CheckReq(listReq);

	if (ListCount(listReq) > 0)
	then
		nResult = RequirementsDialog(szTitle, listReq);
		if (nResult = BACK) goto Dlg_SdWelcome;
    endif;

Dlg_SdLicense2:
    szTitle = "";
    szOpt1 = "";
    szOpt2 = "";
    //{{IS_SCRIPT_TAG(License_File_Path)
    szLicenseFile = SUPPORTDIR ^ "License.rtf";
    //}}IS_SCRIPT_TAG(License_File_Path)
    //{{IS_SCRIPT_TAG(Dlg_SdLicense2)
    nResult = SdLicense2Ex( szTitle, szOpt1, szOpt2, szLicenseFile, bLicenseAccepted, TRUE );
    //}}IS_SCRIPT_TAG(Dlg_SdLicense2)
    if (nResult = BACK) then
        goto Dlg_SdWelcome;
    else
        bLicenseAccepted = TRUE;
    endif;

Dlg_SdFeatureTree: 
    szTitle = "";
    szMsg = "";
    szFeatures = "";
    nLevel = 2;
	//{{IS_SCRIPT_TAG(Dlg_SdFeatureTree)	
	nResult = SdFeatureTree( szTitle, szMsg, TARGETDIR, szFeatures, nLevel );
	//}}IS_SCRIPT_TAG(Dlg_SdFeatureTree)
	if (nResult = BACK) goto Dlg_SdLicense2;  
    
Dlg_WebsiteParams:
	szTitle = "";
    nResult = WebsiteParamsDialog( szTitle, szBindingName, szBindingPort );
	TextSubSetValue("<QP8_BINDING_NAME>", szBindingName, TRUE);
	TextSubSetValue("<QP8_BINDING_PORT>", szBindingPort, TRUE);
	if (nResult = BACK) goto Dlg_SdFeatureTree;  


/*Dlg_SQLServer:
    nResult = OnSQLServerInitialize( nResult );
    if( nResult = BACK ) goto Dlg_SdFeatureTree;

Dlg_ObjDialogs:
    nResult = ShowObjWizardPages( nResult );
    if (nResult = BACK) goto Dlg_SQLServer;*/
  
Dlg_SdStartCopy2:
    szTitle = "";
    szMsg = "";
    //{{IS_SCRIPT_TAG(Dlg_SdStartCopy2)	
    nResult = SdStartCopy2( szTitle, szMsg );	
    //}}IS_SCRIPT_TAG(Dlg_SdStartCopy2)
    if (nResult = BACK) goto Dlg_WebsiteParams;

    // Added in 11.0 - Set appropriate StatusEx static text.
    SetStatusExStaticText( SdLoadString( IDS_IFX_STATUSEX_STATICTEXT_FIRSTUI ) );
 
    return 0;
end;

//---------------------------------------------------------------------------
// OnFirstUIAfter
//
// First Install UI Sequence - After Move Data
//
// The OnFirstUIAfter event called by OnShowUI after the file transfer
// of the setup when the setup is running in first install mode. By default
// this event displays UI that informs the end user that the setup has been
// completed successfully.
//
// Note: This event will not be called automatically in a
// program...endprogram style setup.
//---------------------------------------------------------------------------
function OnFirstUIAfter()
    STRING szTitle, szMsg1, szMsg2, szOpt1, szOpt2;
    NUMBER bvOpt1, bvOpt2;
begin
	CreateWebsites();
	
    ShowObjWizardPages(NEXT);
    
    szTitle = "";
    szMsg1 = ""; 
    szMsg2 = "";
    szOpt1 = "";
    szOpt2 = "";
	bvOpt1   = FALSE;
    bvOpt2   = FALSE;    
    
    //{{IS_SCRIPT_TAG(Dlg_SdDinishEx)	
    if ( BATCH_INSTALL ) then
    	SdFinishReboot ( szTitle , szMsg1 , SYS_BOOTMACHINE , szMsg2 , 0 );
    else
	    SdFinish ( szTitle , szMsg1 , szMsg2 , szOpt1 , szOpt2 , bvOpt1 , bvOpt2 );
	endif;
    //}}IS_SCRIPT_TAG(Dlg_SdDinishEx)	
end;
