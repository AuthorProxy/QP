// Include Ifx.h for built-in InstallScript function prototypes.
#include "Ifx.h"

// Dialog box and control IDs.
#define RES_WEBSITEPARAMS_DIALOG_ID             10264   // ID of dialog box itself

#define RES_EDIT_WEBSITENAME   1203
#define RES_EDIT_WEBSITEPORT   1205
#define  RES_PBUT_NEXT         1   // ID of Next button
#define  RES_PBUT_CANCEL       9   // ID of Cancel button
#define  RES_PBUT_BACK        12   // ID of Back button

prototype WebsiteParamsDialog(STRING, BYREF STRING, BYREF STRING);

//---------------------------------------------------------------------------
// WebsiteParamsDialog
//
//---------------------------------------------------------------------------

function WebsiteParamsDialog(szDialogName, szBindingName, szBindingPort)
    STRING  szTemp, szString;
    STRING szTitle, szMsg1, szMsg2, szOpt1, szOpt2;
    BOOL bvOpt1, bvOpt2;
    NUMBER  nResult, nCmdValue, hwndDlg;
    INT nVal;
    BOOL    bDone;
    HWND    hInstance, hwndParent, hwndItem;
begin

    // Define the dialog box.  Pass a null string in the second parameter
    // to get the dialog box from _isuser.dll or _isres.dll.  Pass a null
    // string in the third parameter because the dialog box is identified
    // by its ID in the fourth parameter.
    
    nResult = EzDefineDialog(szDialogName, "", "", RES_WEBSITEPARAMS_DIALOG_ID);
                                                                    
    if (nResult < 0) then
        // Report an error; then terminate.
		LoadStringFromStringTable("IDS_CANNOT_CREATE_DIALOG", szString);
        MessageBox(szString, SEVERE);
        abort;
    endif;
    
    // Initialize the indicator used to control the while loop.
    bDone = FALSE;
    
    // Loop until done.
    repeat

        // Display the dialog box and return the next dialog box event.
        nCmdValue = WaitOnDialog(szDialogName);

        // Respond to the event.
        switch (nCmdValue)
            case DLG_CLOSE:
                Do (EXIT);
            case DLG_ERR:
				LoadStringFromStringTable("IDS_CANNOT_CREATE_DIALOG", szString);
		        MessageBox(szString, SEVERE);
                abort;
            case DLG_INIT:     
				// Get the dialog box's window handle.
                hwndDlg = CmdGetHwndDlg(szDialogName);

                CtrlSetText(szDialogName, RES_EDIT_WEBSITENAME, "localhost");
                CtrlSetText(szDialogName, RES_EDIT_WEBSITEPORT, "89");

            case RES_PBUT_CANCEL:
                // The user clicked the Cancel button.
				if(IDYES = SprintfBox(MB_YESNO|MB_ICONEXCLAMATION|MB_DEFBUTTON2, SdLoadString(SD_STR_ONCANCELING_TITLE), SdLoadString(SD_STR_ONCANCELING_CONFIRM_MSG))) 
     			then
        			EndDialog(szDialogName);
  			        //Display Finish dialog.
       				szTitle = "";    
        			szMsg1 = SdLoadString( SD_STR_ONCANCELING_FINISH_MSG1 );
        			szMsg2 = SdLoadString( SD_STR_ONCANCELING_FINISH_MSG2 );    
        			szOpt1 = "";
        			szOpt2 = "";
        			bvOpt1   = FALSE;
        			bvOpt2   = FALSE;
        			SdFinish ( szTitle, szMsg1, szMsg2 , szOpt1, szOpt2, bvOpt1, bvOpt2 );                       
        
					abort;
		    	endif; 
		    	
            case RES_PBUT_NEXT: 
            	nVal = NEXT;
                bDone = TRUE;
                CtrlGetText(szDialogName, RES_EDIT_WEBSITENAME, szBindingName);
                CtrlGetText(szDialogName, RES_EDIT_WEBSITEPORT, szBindingPort);

            case RES_PBUT_BACK: 
            	nVal = BACK;
                bDone = TRUE;
                
			default:
            // check standard handling
                if (SdIsStdButton( nCmdValue )) then// && SdDoStdButton( nCmdValue )) then
                // The user clicked the Cancel button.
					if(IDYES = SprintfBox(MB_YESNO|MB_ICONEXCLAMATION|MB_DEFBUTTON2, SdLoadString(SD_STR_ONCANCELING_TITLE), SdLoadString(SD_STR_ONCANCELING_CONFIRM_MSG))) 
 	    			then
  		      			EndDialog(szDialogName);
  				        //Display Finish dialog.
     	  				szTitle = "";    
      	 	 			szMsg1 = SdLoadString( SD_STR_ONCANCELING_FINISH_MSG1 );
       	 				szMsg2 = SdLoadString( SD_STR_ONCANCELING_FINISH_MSG2 );    
        				szOpt1 = "";
	        			szOpt2 = "";
 		       			bvOpt1   = FALSE;
   		     			bvOpt2   = FALSE;
     		   			SdFinish ( szTitle, szMsg1, szMsg2 , szOpt1, szOpt2, bvOpt1, bvOpt2 );                       
       		 
						abort;
		    		endif;
                endif;
				bDone = FALSE;
        endswitch;

    until bDone;
    
    // Close the dialog box.
    EndDialog (szDialogName);

    // Free the dialog box from memory.
    ReleaseDialog (szDialogName);
    
    return nVal;
end;
