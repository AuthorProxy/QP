        int OnSaveChanges()
        {
            var entries = ChangeTracker.Entries();

            var ctx = CurrentObjectContext;

            var added = entries.Where(x => x.State == EntityState.Added);
            var modified = entries.Where(x => x.State == EntityState.Modified);
            var deleted = entries.Where(x => x.State == EntityState.Deleted);

            foreach (var entry in added)
            {                
                var entity = entry.Entity as IQPArticle;
                if (entity != null)
                {
                    Type entityType = entity.GetType();

                    if (entityType.BaseType != null && entityType.Namespace == "System.Data.Entity.DynamicProxies")
                        entityType = entityType.BaseType;

                    string entityTypeName = entityType.Name;

                    ProcessCreating(entityTypeName, entity);
                }

            }

            foreach (var entry in modified)
            {
                var entity = entry.Entity as IQPArticle;
                if (entity != null)
                {
                    Type entityType = entity.GetType();

                    if (entityType.BaseType != null && entityType.Namespace == "System.Data.Entity.DynamicProxies")
                        entityType = entityType.BaseType;

                    string entityTypeName = entityType.Name;


                    ProcessUpdating(entityTypeName, entity, entry.CurrentValues.PropertyNames.ToArray());
                }

            }

            return 0;
        }


        private void ProcessCreating(string contentName, IQPArticle instance)
        {
            var values = instance.Pack(this);
            DateTime created = DateTime.Now;
            // instance.LoadStatusType();
            // todo: load first status
            const string lowestStatus = "None";
            //if (!properties.Contains("Visible"))
            //    instance.Visible = true;
            //if (!properties.Contains("Archive"))
            //    instance.Archive = false;

            instance.Id = Cnn.AddFormToContent(SiteId, Cnn.GetContentIdByNetName(SiteId, contentName), lowestStatus, ref values, 0, true, 0, instance.Visible, instance.Archive, true, ref created);
            instance.Created = created;
            instance.Modified = created;
        }

        private void ProcessUpdating(string contentName, IQPArticle instance, string[] properties)
        {
            var values = instance.Pack(this, properties);
            DateTime modified = DateTime.Now;
            throw new NotImplementedException("CUD operations are not implemented yet.");
            // Cnn.AddFormToContent(SiteId, Cnn.GetContentIdByNetName(SiteId, contentName), instance.StatusType.StatusTypeName, ref values, (int)instance.Id, true, 0, instance.Visible, instance.Archive, true, ref modified);
            // instance.Modified = modified;
        }